--- SOURCE ---
func fib(n: s32): s32
begin
    if n = 0 then return 0
    if n = 1 then return 1
    return fib(n - 1) + fib(n - 2)
end

func main(): s32
begin
    var fib_20: s32

    fib_20 := fib(20)
    print fib_20

    return 0
end
--- TREE ---
AST_ROOT 
 AST_LIST 
 AST_LIST 
  AST_FUNC name=fib parameters=n: s32
   STMT_BLOCK vars=
    AST_LIST 
     STMT_IF
      EXPR_BINARY 
       op: EQ
       EXPR_LITERAL n
       EXPR_LITERAL 0
      STMT_RETURN
       EXPR_LITERAL 0
     STMT_IF
      EXPR_BINARY 
       op: EQ
       EXPR_LITERAL n
       EXPR_LITERAL 1
      STMT_RETURN
       EXPR_LITERAL 1
     STMT_RETURN
      EXPR_BINARY 
       op: PLUS
       EXPR_CALL fib
        AST_LIST 
         EXPR_BINARY 
          op: MINUS
          EXPR_LITERAL n
          EXPR_LITERAL 1
       EXPR_CALL fib
        AST_LIST 
         EXPR_BINARY 
          op: MINUS
          EXPR_LITERAL n
          EXPR_LITERAL 2
  AST_FUNC name=main parameters=
   STMT_BLOCK vars=fib_20: s32
    AST_LIST 
     STMT_ASSIGNMENT
      EXPR_LITERAL fib_20
      EXPR_CALL fib
       AST_LIST 
        EXPR_LITERAL 20
     STMT_PRINT
      EXPR_LITERAL fib_20
     STMT_RETURN
      EXPR_LITERAL 0
 AST_LIST 
 AST_LIST 
 AST_LIST 
--- OUTPUT ---
6765
